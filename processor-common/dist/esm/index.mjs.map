{"version":3,"file":"index.mjs","sources":["../../src/server-types.ts","../../src/BasicServer.ts"],"sourcesContent":["export enum ServerState {\n    RUNNING = 'RUNNING',\n    SHUTTING_DOWN_REQUESTS = 'SHUTTING_DOWN_REQUESTS',\n    SHUTTING_DOWN_SERVER = 'SHUTTING_DOWN_SERVER',\n}\n\nexport enum ServerError {\n    DATABASE = 'DATABASE',\n    INVALID = 'INVALID',\n    SHUTDOWN = 'SHUTDOWN'\n}\n","import * as http from 'http'\nimport Fastify from 'fastify'\nimport type {\n    FastifyInstance,\n    FastifyLoggerInstance,\n    FastifyServerOptions,\n    RawReplyDefaultExpression,\n    RawRequestDefaultExpression,\n} from 'fastify'\nimport { ServerState } from './server-types'\n\nexport class BasicServer<\n    Server extends http.Server,\n    Request extends RawRequestDefaultExpression<Server> = RawRequestDefaultExpression<Server>,\n    Reply extends RawReplyDefaultExpression<Server> = RawReplyDefaultExpression<Server>,\n    Logger extends FastifyLoggerInstance = FastifyLoggerInstance\n    > {\n\n    fastify: FastifyInstance<Server, Request, Reply, Logger> & PromiseLike<FastifyInstance<Server, Request, Reply, Logger>>\n    serverState: ServerState = ServerState.RUNNING\n    private batchIntervalHandle\n\n    constructor(\n        opts?: FastifyServerOptions<Server, Logger>\n    ) {\n        this.fastify = Fastify(opts)\n\n        const _this = this\n\n        process.on('SIGINT', () => {\n            console.log('SIGINT signal received, shutting down.')\n            _this.shutdown()\n        })\n\n        process.on('SIGTERM', () => {\n            console.info('SIGTERM signal received, shutting down.');\n            _this.shutdown()\n        })\n\n        process.on('uncaughtException', function (error) {\n            console.log('received uncaught exception, shutting down.', error)\n            _this.shutdown()\n        })\n    }\n\n    start(\n        port = 80,\n        address = '0.0.0.0'\n    ) {\n        this.doStart(port, address).then()\n    }\n\n    shutdown() {\n        this.serverState = ServerState.SHUTTING_DOWN_REQUESTS\n        const shutdownIntervalHandle = setInterval(() => {\n            console.log('Checking shutdown')\n            if (this.serverState === ServerState.SHUTTING_DOWN_SERVER) {\n                console.log('Removing shutdown check')\n                clearInterval(shutdownIntervalHandle)\n                console.log('Shutting down')\n                this.shutdownServer()\n            } else {\n                console.log('NOT shutting down')\n            }\n            this.checkServerState()\n        }, 5000)\n    }\n\n    setIntervalProcessing(\n        callback: () => Promise<void>,\n        interval: number\n    ) {\n        this.batchIntervalHandle = setInterval(() => {\n            callback().then()\n        }, interval)\n        this.checkServerState()\n    }\n\n    protected async doStart(\n        port: number,\n        address: string\n    ) {\n        try {\n            await this.doStartResources()\n            await this.fastify.listen(port, address)\n        } catch (err) {\n            try {\n                this.fastify.log.error(err)\n            } finally {\n                process.exit(1)\n            }\n        }\n    }\n\n    protected async doStartResources() {\n        // Overwrite if there are resources that must be started\n    }\n\n    protected shutdownServer() {\n        console.log('Shutting Down Fastify')\n        this.fastify.close().then(() => {\n            console.log('httpserver shutdown successfully')\n            this.shutdownResources()\n        }, (err) => {\n            console.log('error shutting down httpserver', err)\n            this.shutdownResources()\n        })\n    }\n\n    protected shutdownResources() {\n        process.exit(0)\n    }\n\n    protected checkServerState() {\n        if (this.serverState === ServerState.SHUTTING_DOWN_REQUESTS\n            || this.serverState === ServerState.SHUTTING_DOWN_SERVER) {\n            if (this.batchIntervalHandle) {\n                clearInterval(this.batchIntervalHandle)\n                this.batchIntervalHandle = null\n            }\n            this.serverState = ServerState.SHUTTING_DOWN_SERVER\n        }\n    }\n\n}"],"names":[],"mappings":"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"}